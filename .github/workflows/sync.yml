name: Social Sync
on:
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: '0 2 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no actual posting)'
        required: false
        type: boolean
        default: false

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Restore sync state
        uses: actions/cache/restore@v4
        with:
          path: sync_state.json
          key: social-sync-state-${{ github.repository }}
          restore-keys: |
            social-sync-state-
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Check sync state
        run: |
          if [ -f sync_state.json ]; then
            echo "üìä Found existing sync state:"
            python -c 'from src.sync_state import SyncState; state = SyncState(); print(f"Last sync: {state.get_last_sync_time()}"); print(f"Synced posts: {state.get_synced_posts_count()}")'
          else
            echo "üìù No existing sync state found - this is a fresh start"
          fi
      
      - name: Run sync
        env:
          BLUESKY_HANDLE: ${{ secrets.BLUESKY_HANDLE }}
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
          MASTODON_API_BASE_URL: ${{ secrets.MASTODON_API_BASE_URL }}
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
          LOG_LEVEL: INFO
        run: |
          # Only set SYNC_START_DATE for scheduled runs to avoid re-syncing historical posts
          if [ "${{ github.event_name }}" = "schedule" ]; then
            export SYNC_START_DATE="2025-08-23T14:10:00+00:00"
          fi
          python sync.py sync ${{ github.event.inputs.dry_run == 'true' && '--dry-run' || '' }}
      
      - name: Save sync state
        if: always()
        uses: actions/cache/save@v4
        with:
          path: sync_state.json
          key: social-sync-state-${{ github.repository }}-${{ github.run_id }}
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-logs-${{ github.run_id }}
          path: social_sync.log
          retention-days: 7
      
      - name: Upload sync state (backup)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-state-backup-${{ github.run_id }}
          path: sync_state.json
          retention-days: 90
